{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { wp } from '../wordpress/api'; // A. Use wpapi to pull a specific paper\n// B. Take all html from that paper and feed it to particle finder\n\nvar sampleUrl = 'https://www.thepathoftruth.com/what-the-lord-has-done-with-me/part9/p1.htm';\nexport var getPaperByUrl = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var url,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n            return _context.abrupt(\"return\", wp.pages().then(function (result) {\n              return console.log('result :>> ', result);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getPaperByUrl() {\n    return _ref.apply(this, arguments);\n  };\n}(); // const result = \n\ngetPaperByUrl(sampleUrl); // console.log('result :>> ', result)\n// 1. Find tags around a Particle\n//  a. Verify title is 'Particle'\n//  b. Take the contents within that particle and run countWords() on it.\n// 2. Create a countWords() function that creates a weighted hashmap of individual words and their counts.","map":{"version":3,"sources":["/home/michael/Desktop/CodeProjects/TPOT/TPOT-sitescan/particle-parser/components/particle-scanner.ts"],"names":["wp","sampleUrl","getPaperByUrl","url","pages","then","result","console","log"],"mappings":";;AAAA,SAASA,EAAT,QAAmB,kBAAnB,C,CAEA;AACA;;AAEA,IAAMC,SAAS,GAAG,4EAAlB;AACA,OAAO,IAAMC,aAAa;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,GAAP,2DAAa,EAAb;AAAA,6CAClBH,EAAE,CAACI,KAAH,GACFC,IADE,CACG,UAAAC,MAAM;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B,CAAJ;AAAA,aADT,CADkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbJ,aAAa;AAAA;AAAA;AAAA,GAAnB,C,CAKP;;AACAA,aAAa,CAACD,SAAD,CAAb,C,CACA;AAEA;AACA;AACA;AACA","sourcesContent":["import { wp } from '../wordpress/api';\n\n// A. Use wpapi to pull a specific paper\n// B. Take all html from that paper and feed it to particle finder\n\nconst sampleUrl = 'https://www.thepathoftruth.com/what-the-lord-has-done-with-me/part9/p1.htm'\nexport const getPaperByUrl = async (url = '') => {\n    return wp.pages()\n        .then(result => console.log('result :>> ', result))\n}\n\n// const result = \ngetPaperByUrl(sampleUrl)\n// console.log('result :>> ', result)\n\n// 1. Find tags around a Particle\n//  a. Verify title is 'Particle'\n//  b. Take the contents within that particle and run countWords() on it.\n// 2. Create a countWords() function that creates a weighted hashmap of individual words and their counts.\n\n"]},"metadata":{},"sourceType":"module"}