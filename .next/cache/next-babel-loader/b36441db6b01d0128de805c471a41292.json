{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/michael/Desktop/CodeProjects/TPOT/TPOT-sitescan/particle-parser/components/SampleComponent.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { inject, observer } from 'mobx-react';\nimport Link from 'next/link';\nimport React from 'react';\nimport Clock from './Clock';\nvar SampleComponent = (_dec = inject('store'), _dec(_class = observer(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(SampleComponent, _React$Component);\n\n  var _super = _createSuper(SampleComponent);\n\n  function SampleComponent() {\n    _classCallCheck(this, SampleComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SampleComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.store) {\n        return;\n      }\n\n      this.props.store.start();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (!this.props.store) {\n        return;\n      }\n\n      this.props.store.stop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.store) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 14\n          }\n        }, \"Store not defined\");\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, this.props.title), __jsx(Clock, {\n        lastUpdate: this.props.store.lastUpdate,\n        light: this.props.store.light,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), __jsx(\"nav\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        href: this.props.linkTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"Navigate\"))));\n    }\n  }]);\n\n  return SampleComponent;\n}(React.Component)) || _class) || _class);\nexport default SampleComponent;","map":{"version":3,"sources":["/home/michael/Desktop/CodeProjects/TPOT/TPOT-sitescan/particle-parser/components/SampleComponent.tsx"],"names":["inject","observer","Link","React","Clock","SampleComponent","props","store","start","stop","title","lastUpdate","light","linkTo","Component"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;IAUMC,e,WAFLL,MAAM,CAAC,OAAD,C,gBACNC,Q;;;;;;;;;;;;;wCAE4B;AACzB,UAAI,CAAC,KAAKK,KAAL,CAAWC,KAAhB,EAAuB;AACrB;AACD;;AACD,WAAKD,KAAL,CAAWC,KAAX,CAAiBC,KAAjB;AACD;;;2CAE6B;AAC5B,UAAI,CAAC,KAAKF,KAAL,CAAWC,KAAhB,EAAuB;AACrB;AACD;;AACD,WAAKD,KAAL,CAAWC,KAAX,CAAiBE,IAAjB;AACD;;;6BAEe;AACd,UAAI,CAAC,KAAKH,KAAL,CAAWC,KAAhB,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD;;AACD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWI,KAAhB,CADF,EAEE,MAAC,KAAD;AACE,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,UAD/B;AAEE,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,KAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CANF,CADF;AAcD;;;;EAjC2BV,KAAK,CAACW,S;AAoCpC,eAAeT,eAAf","sourcesContent":["import { inject, observer } from 'mobx-react'\nimport Link from 'next/link'\nimport React from 'react'\nimport { IStore } from '../store'\nimport Clock from './Clock'\n\ninterface IOwnProps {\n  store?: IStore\n  title: string\n  linkTo: string\n}\n\n@inject('store')\n@observer\nclass SampleComponent extends React.Component<IOwnProps> {\n  public componentDidMount() {\n    if (!this.props.store) {\n      return\n    }\n    this.props.store.start()\n  }\n\n  public componentWillUnmount() {\n    if (!this.props.store) {\n      return\n    }\n    this.props.store.stop()\n  }\n\n  public render() {\n    if (!this.props.store) {\n      return <div>Store not defined</div>\n    }\n    return (\n      <div>\n        <h1>{this.props.title}</h1>\n        <Clock\n          lastUpdate={this.props.store.lastUpdate}\n          light={this.props.store.light}\n        />\n        <nav>\n          <Link href={this.props.linkTo}>\n            <a>Navigate</a>\n          </Link>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default SampleComponent\n"]},"metadata":{},"sourceType":"module"}