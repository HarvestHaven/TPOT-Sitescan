{"ast":null,"code":"import { wpapi as wp } from '../wordpress/api';\nconsole.log('wpapi :>> ', wpapi); // console.log('cheerio :>> ', cheerio);\n// A. Use wpapi to pull a specific paper\n// B. Take all html from that paper and feed it to particle finder\n\nvar sampleUrl = 'https://www.thepathoftruth.com/what-the-lord-has-done-with-me/part9/p1.htm';\nexport var getPaperByUrl = function getPaperByUrl() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return wp.pages().then(function (result) {\n    return console.log('result :>> ', result);\n  });\n};\ngetPaperByUrl(sampleUrl); // 1. Find tags around a Particle\n//  a. Verify title is 'Particle'\n//  b. Take the contents within that particle and run countWords() on it.\n// 2. Create a countWords() function that creates a weighted hashmap of individual words and their counts.","map":{"version":3,"sources":["/home/michael/Desktop/CodeProjects/TPOT/TPOT-sitescan/particle-parser/components/particle-scanner.js"],"names":["wpapi","wp","console","log","sampleUrl","getPaperByUrl","url","pages","then","result"],"mappings":"AAAA,SAASA,KAAK,IAAIC,EAAlB,QAA4B,kBAA5B;AAEAC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAA1B,E,CACA;AAEA;AACA;;AAEA,IAAMI,SAAS,GAAG,4EAAlB;AACA,OAAO,IAAMC,aAAa,GAAC,SAAdA,aAAc,GAAU;AAAA,MAATC,GAAS,uEAAL,EAAK;AACjC,SAAOL,EAAE,CAACM,KAAH,GACFC,IADE,CACG,UAAAC,MAAM;AAAA,WAAEP,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,MAA3B,CAAF;AAAA,GADT,CAAP;AAEH,CAHM;AAKPJ,aAAa,CAACD,SAAD,CAAb,C,CAEA;AACA;AACA;AACA","sourcesContent":["import { wpapi as wp } from '../wordpress/api';\n\nconsole.log('wpapi :>> ', wpapi);\n// console.log('cheerio :>> ', cheerio);\n\n// A. Use wpapi to pull a specific paper\n// B. Take all html from that paper and feed it to particle finder\n\nconst sampleUrl = 'https://www.thepathoftruth.com/what-the-lord-has-done-with-me/part9/p1.htm'\nexport const getPaperByUrl=(url='')=>{\n    return wp.pages()\n        .then(result=>console.log('result :>> ', result))\n}\n\ngetPaperByUrl(sampleUrl)\n\n// 1. Find tags around a Particle\n//  a. Verify title is 'Particle'\n//  b. Take the contents within that particle and run countWords() on it.\n// 2. Create a countWords() function that creates a weighted hashmap of individual words and their counts.\n\n"]},"metadata":{},"sourceType":"module"}